---
title: "Creating Demographics Files"
weight: 1
format: 
  html:
    toc: true
    toc-depth: 5
    page-layout: full
---

# Create a demographics file

The demographics file is a required input file for EMOD that specifies characteristics of the population in a simulation. This includes aspects like the population size, birth rates, non-malaria mortality rates, age structure, initial prevalence, and more. Full documentation on the demographics file can be found here.

At least one demographics file is required for every simulation unless you set the parameter Enable_Demographics_Builtin to 1 (one) in the configuration file. This setting does not represent a real location and is generally only used for testing and validating code.

For many applications, users often will reuse a standard demographics file and make modifications by hand or by script. In more complex simulations, creating a demographics file from scratch may be needed.

## Parts of a demographics file

A demographics file is a JSON file organized into 4 main sections:

1.  Metadata
2.  NodeProperties
3.  Defaults
    -   Parameters applied to all nodes in the simulation
4.  Nodes: each node is a simulated location. Transmission within a node is well-mixed, and nodes are connected by human and/or vector migration.
    -   Allows node-specific parameters
    -   Specified parameters override values in 'Defaults'

``` python
# Structure of Demographics File for a simulation with 1 node
  {
     "Metadata": {
          "DateCreated": "dateTime",
          "Tool": "scriptUsedToGenerate",
          "Author": "author",
          "IdReference": "Gridded world grump2.5arcmin",
          "NodeCount": "1"
     },
     "NodeProperties": [
          {...}
     ],
     "Defaults": {
          "NodeAttributes": {
            ...
            "BirthRateSource": "World Bank",
            "CountryBirthRate": 31.047,
            "World Bank Year": "2016",
            ...
          },
          "IndividualAttributes": {...},
          "IndividualProperties": {...}
     },
     "Nodes": [{
          "NodeID": 1,
          "NodeAttributes": {
            "BirthRate": 0.1190,
            "InitialPopulation": 1400,
            "Village": "Obom"
          },
          "IndividualAttributes": {...},
          "IndividualProperties": {...}
     }]
  }
```

## Generate a demographics file from csv

First, create a file "my_node.csv" with the following columns:

| Required                   | optional                                                                            |
|----------------------------|-------------------------------------------------------------------------------------|
| nodeid (unique \# \>0)     | Other node-specific variables, if any, such as village name, latitude, and logitude |
| population (starting size) |                                                                                     |

Example:

| nodeid | population | Village | lat      | lon        |
|--------|------------|---------|----------|------------|
| 1      | 1000       | "Obom"  | 5.760759 | -0.4473415 |

In EMODpy, we generate the demographics file for each simulation using a standard `build_demog()` function.

``` python
def build_demog():
    """
    This function builds a demographics input file for the DTK using emod_api.
    """
    
    # From template node #
    ######################
    # This snippet allows you to manually specify the node details instead of using a .csv
#    demog = Demographics.from_template_node(lat=1, lon=2, pop=1000, name="Example_Site")

    # From input file csv #
    #######################
    demog = Demographics.from_csv(input_file = os.path.join(<path_to_file>,"my_node.csv"),
                                  id_ref="indie_clusters", 
                                  init_prev = 0.01, 
                                  include_biting_heterogeneity = True)
    
    demog.SetEquilibriumVitalDynamics()
    age_distribution = Distributions.AgeDistribution_SSAfrica
    demog.SetAgeDistribution(age_distribution)

    return demog
```